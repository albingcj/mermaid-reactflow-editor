.app {
  display: flex;
  height: 100vh;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
}

/* Placeholder styling for textarea */
.placeholder-light::placeholder {
  color: var(--muted) !important;
  opacity: 0.6 !important;
  font-style: italic;
}

.placeholder-light:focus::placeholder {
  opacity: 0.4;
}

.sidebar {
  width: 350px;
  background-color: var(--surface);
  padding: 20px;
  overflow-y: auto;
  border-right: 1px solid #ddd;
}

.sidebar h1 {
  font-size: 24px;
  margin-bottom: 20px;
  color: var(--text);
}

.sidebar h2 {
  font-size: 18px;
  margin-bottom: 10px;
  color: var(--muted);
}

.sidebar h3 {
  font-size: 14px;
  margin-bottom: 5px;
  color: var(--muted);
}

.input-section {
  margin-bottom: 20px;
}

.file-upload {
  margin-bottom: 10px;
}

.file-upload input[type="file"] {
  display: none;
}

.file-upload label {
  display: inline-block;
  padding: 8px 16px;
  background-color: var(--accent);
  color: white;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.file-upload label:hover {
  background-color: color-mix(in srgb, var(--accent) 80%, black 20%);
}

textarea {
  width: 100%;
  padding: 10px;
  border: 1px solid var(--border);
  /* Clear custom styles except React Flow overrides */
  font-family: monospace;
  font-size: 12px;
  resize: vertical;
}

.diagrams-list ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.diagrams-list li {
  padding: 8px 12px;
  margin-bottom: 5px;
  background-color: var(--bg);
  border: 1px solid #ddd;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.2s;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.diagrams-list li:hover {
  background-color: color-mix(in srgb, var(--surface) 80%, black 20%);
}

.diagrams-list li.selected {
  background-color: var(--accent);
  color: white;
  border-color: var(--accent);
}

.diagram-code {
  margin-top: 20px;
}

.diagram-code pre {
  background-color: var(--bg);
  border: 1px solid var(--border);
  border-radius: 4px;
  padding: 10px;
  font-size: 12px;
  overflow-x: auto;
  max-height: 200px;
  overflow-y: auto;
}

.main-content {
  flex: 1;
  position: relative;
  background-color: var(--bg);
}

.loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 18px;
  color: var(--muted);
}

.placeholder {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  color: var(--muted);
  font-size: 16px;
  max-width: 400px;
}

.diagram-actions {
  margin-top: 20px;
  padding-top: 20px;
  border-top: 1px solid var(--border);
}

.current-diagram-info {
  background-color: color-mix(in srgb, var(--primary) 10%, var(--surface) 90%);
  border: 1px solid var(--primary);
  border-radius: 4px;
  padding: 6px 10px;
  margin-bottom: 10px;
  text-align: center;
}

.current-diagram-info small {
  color: var(--primary);
  font-weight: 500;
  font-size: 12px;
}

.diagram-actions button {
  display: block;
  width: 100%;
  padding: 8px 12px;
  margin-bottom: 8px;
  background-color: var(--accent);
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.diagram-actions button:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--accent) 80%, black 20%);
}

.diagram-actions button:disabled {
  background-color: color-mix(in srgb, var(--surface) 60%, black 40%);
  cursor: not-allowed;
}

.saved-diagrams {
  margin-top: 20px;
}

.saved-diagrams ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.saved-diagram-item {
  padding: 10px;
  margin-bottom: 8px;
  background-color: var(--bg);
  border: 1px solid var(--border);
  border-radius: 4px;
}

.diagram-info {
  margin-bottom: 8px;
}

.diagram-info strong {
  display: block;
  margin-bottom: 4px;
}

.diagram-info small {
  color: var(--muted);
  font-size: 12px;
}

.diagram-actions-mini {
  display: flex;
  gap: 5px;
}

.diagram-actions-mini button {
  flex: 1;
  padding: 4px 8px;
  font-size: 12px;
  background-color: var(--accent);
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.diagram-actions-mini button:hover {
  background-color: color-mix(in srgb, var(--accent) 80%, black 20%);
}

.diagram-actions-mini .delete-btn {
  background-color: color-mix(in srgb, var(--accent) 60%, #ff4433 40%);
}

.diagram-actions-mini .delete-btn:hover {
  background-color: color-mix(in srgb, var(--accent) 40%, #d32f2f 60%);
}

.diagram-actions-mini .rename-btn {
  background-color: color-mix(in srgb, var(--primary) 60%, #ff9800 40%);
}

.diagram-actions-mini .rename-btn:hover {
  background-color: color-mix(in srgb, var(--primary) 50%, #f57c00 50%);
}

.diagram-actions-mini .save-btn-mini {
  background-color: var(--accent);
}

.diagram-actions-mini .save-btn-mini:hover {
  background-color: color-mix(in srgb, var(--accent) 80%, black 20%);
}

.diagram-actions-mini .cancel-btn-mini {
  background-color: color-mix(in srgb, var(--surface) 60%, black 40%);
}

.diagram-actions-mini .cancel-btn-mini:hover {
  background-color: color-mix(in srgb, var(--surface) 50%, black 50%);
}

.diagram-name-editable {
  cursor: pointer;
  transition: color 0.2s;
}

.diagram-name-editable:hover {
  color: var(--accent);
  text-decoration: underline;
}

.diagram-name-edit {
  width: 100%;
}

.diagram-name-input {
  width: 100%;
  padding: 4px 8px;
  border: 2px solid var(--accent);
  border-radius: 4px;
  font-size: 14px;
  font-weight: bold;
  background-color: var(--bg);
  outline: none;
}

.diagram-name-input:focus {
  border-color: color-mix(in srgb, var(--accent) 80%, black 20%);
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--accent) 20%, transparent 80%);
}

/* Node Editor Styles */
.node-editor-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.editor-container {
  border: 1px solid var(--border);
  background: var(--bg);
}

.node-editor {
  background-color: white;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  max-width: 400px;
  width: 90%;
}

.node-editor h3 {
  margin-top: 0;
  margin-bottom: 16px;
}

.form-group {
  margin-bottom: 16px;
}

.form-group label {
  display: block;
  margin-bottom: 4px;
  font-weight: 500;
  font-size: 14px;
}

.form-group input[type="text"],
.form-group input[type="url"],
.form-group textarea {
  width: 100%;
  padding: 8px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
}

.form-group textarea {
  resize: vertical;
  font-family: inherit;
}

.color-input {
  display: flex;
  gap: 8px;
  align-items: center;
}

.color-input input[type="color"] {
  width: 50px;
  height: 35px;
  border: 1px solid #ddd;
  border-radius: 4px;
  cursor: pointer;
}

.color-input input[type="text"] {
  flex: 1;
}

.button-group {
  display: flex;
  gap: 8px;
  margin-top: 20px;
}

.button-group button {
  flex: 1;
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  transition: background-color 0.3s;
}

/* Custom scrollbar utility used for modal scroll areas */
.custom-scrollbar {
  scrollbar-width: thin; /* Firefox */
  scrollbar-color: rgba(100,100,100,0.6) transparent; /* Firefox */
}
.custom-scrollbar::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
.custom-scrollbar::-webkit-scrollbar-track {
  background: transparent;
}
.custom-scrollbar::-webkit-scrollbar-thumb {
  background-color: rgba(100,100,100,0.35);
  border-radius: 10px;
  border: 2px solid transparent;
  background-clip: padding-box;
}
.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: rgba(100,100,100,0.6);
}

.save-btn {
  background-color: #4CAF50;
  color: white;
}

/* Floating Editing Toolbar */
.editing-toolbar--floating {
  position: absolute;
  top: 10px;
  left: 10px;
  z-index: 1000;
  display: inline-flex;
  align-items: center;
  gap: 6px;
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: saturate(120%) blur(6px);
  border: 1px solid rgba(0,0,0,0.08);
  box-shadow: 0 6px 18px rgba(16, 24, 40, 0.12);
  border-radius: 999px;
  padding: 6px 8px;
}

.editing-toolbar--floating .toolbar-group {
  display: inline-flex;
  align-items: center;
  gap: 4px;
}

.editing-toolbar--floating .toolbar-divider {
  width: 1px;
  height: 22px;
  background: rgba(0,0,0,0.08);
  margin: 0 2px;
}

.editing-toolbar--floating .toolbar-btn {
  width: 28px;
  height: 28px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: 1px solid transparent;
  background: transparent;
  border-radius: 8px;
  color: #344054;
  transition: all 120ms ease;
}

.editing-toolbar--floating .toolbar-btn:hover:not(:disabled) {
  background: #F2F4F7;
  border-color: #E4E7EC;
}

.editing-toolbar--floating .toolbar-btn:active:not(:disabled) {
  background: #EAECF0;
  border-color: #D0D5DD;
}

.editing-toolbar--floating .toolbar-btn[disabled] {
  opacity: 0.5;
  cursor: not-allowed;
}

.editing-toolbar--floating .toolbar-btn svg {
  width: 16px;
  height: 16px;
}

.editing-toolbar--floating .toolbar-btn--danger {
  color: #B42318;
}

.editing-toolbar--floating .toolbar-btn--danger:hover:not(:disabled) {
  background: #FEF3F2;
  border-color: #FEE4E2;
}

.editing-toolbar--floating .toolbar-chip {
  min-width: 22px;
  height: 22px;
  padding: 0 6px;
  font-size: 12px;
  font-weight: 600;
  line-height: 22px;
  text-align: center;
  color: #175CD3;
  background: #EFF8FF;
  border: 1px solid #B2DDFF;
  border-radius: 999px;
}

/* Inline edge label editor */
.edge-label-editor {
  position: absolute;
  z-index: 2000;
  transform: translate(-50%, -120%);
  min-width: 160px;
  background: #fff;
  border: 1px solid rgba(16,24,40,0.08);
  box-shadow: 0 6px 18px rgba(16,24,40,0.12);
  border-radius: 8px;
  padding: 8px;
  display: flex;
  gap: 8px;
  align-items: center;
}

.edge-label-editor input {
  flex: 1;
  border: 1px solid #e6e9ee;
  padding: 6px 8px;
  border-radius: 6px;
  font-size: 13px;
}

.edge-label-editor-actions button {
  background: transparent;
  border: none;
  padding: 6px 8px;
  cursor: pointer;
  font-weight: 600;
  color: #1f2937;
}

.edge-label-editor-actions button:first-child {
  color: #0b6ef6;
}

.edge-label-editor-actions button:last-child {
  color: #6b7280;
}


/* Show a muted visual only when hovering or when the node is selected */
.custom-node.locked:hover,
.custom-node.locked.selected {
  box-shadow: 0 6px 18px rgba(0,0,0,0.12);
  transform: translateY(-2px);
  border-color: rgba(0,0,0,0.12);
  filter: grayscale(0.06);
}

/* Tweak handles appearance when locked only on hover/selected */
.custom-node.locked:hover .react-flow__handle,
.custom-node.locked.selected .react-flow__handle {
  opacity: 0.6;
}

.save-btn:hover {
  background-color: #45a049;
}

.cancel-btn {
  background-color: #f5f5f5;
  color: #333;
}

.cancel-btn:hover {
  background-color: #e0e0e0;
}

/* Custom Node Styles - Clean and Simple */
.custom-node {
  background-color: white;
  border: 2px solid #e5e7eb;
  border-radius: 8px;
  padding: 10px; /* slightly reduced so node-content padding can breathe */
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  position: relative;
  box-sizing: border-box;
  overflow: hidden;
  width: 100%;
  height: 100%;
  color: #1f2937; /* dark text to avoid plain white text issue */
  /* Single, clean transition */
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  /* Ensure proper text wrapping */
  word-wrap: break-word;
  word-break: break-word;
  overflow-wrap: break-word;
}

.custom-node:hover {
  border-color: #d1d5db;
}

.custom-node.selected {
  border-color: #2563eb !important;
  box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.2) !important;
}

/* Prevent React Flow from adding conflicting selection styling to custom node types */
.react-flow__node-custom {
  box-shadow: none !important;
  outline: none !important;
  /* border: none !important; */
}

.react-flow__node-custom.react-flow__node-selected {
  box-shadow: none !important;
  outline: none !important;
  /* border: none !important; */
}

.custom-node.has-link {
  border-color: #10b981;
}

/* Different shapes - Remove restrictive sizing */
.custom-node.shape-circle {
  border-radius: 50%;
  aspect-ratio: 1;
}

.custom-node.shape-diamond {
  border-radius: 0;
  transform: rotate(45deg);
  aspect-ratio: 1;
}

.custom-node.shape-diamond .node-content {
  transform: rotate(-45deg);
  width: 70%;
  height: 70%;
}

.custom-node.shape-stadium {
  border-radius: 30px;
}

.custom-node.shape-round {
  border-radius: 15px;
}

/* .react-flow__node.react-flow__node-custom {
  background: transparent !important;
  background-color: transparent !important;
  border: none !important;
  box-shadow: none !important;
} */

/* Remove min-width constraints that interfere with resizing */

.node-content {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 2;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  padding: 14px; /* improved inner padding for label spacing */
  box-sizing: border-box;
}


.node-label {
  font-weight: 600;
  font-size: 13px;
  margin-bottom: 4px;
  line-height: 1.4;
  word-wrap: break-word;
  word-break: break-word;
  overflow-wrap: break-word;
  max-width: 100%;
  color: #2D3748;
  text-align: center;
  /* Responsive font sizing */
  font-size: clamp(10px, 2vw, 13px);
  /* Add max width to prevent overly wide nodes */
  max-width: 200px;
}

/* Image Node Styles */
.custom-node.has-image {
  padding: 8px;
  background: transparent !important;
  border: none;
  overflow: visible;
  width: 100%;
  height: 100%;
  min-width: 40px;
  min-height: 40px;
}

.node-image-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: block;
  background: transparent !important;
}

.node-image {
  width: 100%;
  height: 100%;
  object-fit: contain;
  /* border-radius: 8px; */
  transition: all 0.3s ease;
  border: none;
  box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  display: block;
  background: transparent !important;
  border-radius: 0% !important;
}

.custom-node.has-image.selected .node-image {
  outline: 2px solid #1976D2;
  outline-offset: 2px;
}

.image-caption {
  position: absolute;
  top: calc(100% + 12px);
  left: 50%;
  transform: translateX(-50%);
  background: rgba(255, 255, 255, 0.95);
  color: #333;
  padding: 6px 10px;
  font-size: 11px;
  font-weight: 600;
  text-align: center;
  border-radius: 6px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.15);
  border: 1px solid #e0e0e0;
  white-space: normal;
  max-width: 140px;
  min-width: 60px;
  word-wrap: break-word;
  overflow-wrap: break-word;
  hyphens: auto;
  line-height: 1.3;
  z-index: 1000;
  pointer-events: none;
}

.image-fallback {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #f5f5f5;
  border: 2px dashed #ccc;
  border-radius: 8px;
  color: #666;
  text-align: center;
  padding: 8px;
  font-size: 11px;
}

/* Adjust handles for image nodes */
.custom-node.has-image .react-flow__handle {
  background: rgba(255, 255, 255, 0.9);
  border: 2px solid #1976D2;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}

/* Node resizer adjustments for image nodes */
.custom-node.has-image .react-flow__resize-control {
  background: #1976D2;
  border: 2px solid white;
  width: 12px;
  height: 12px;
}

.custom-node.has-image .react-flow__resize-control:hover {
  background: #1565C0;
  transform: scale(1.1);
}

/* Make sure the image scales properly with manual resizing */
.custom-node.has-image .node-content {
  width: 100%;
  height: 100%;
  position: relative;
  background: transparent !important;
}

.custom-node.has-image .node-image-container {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: transparent !important;
}

.node-label div {
  margin: 2px 0;
  word-wrap: break-word;
  word-break: break-word;
  overflow-wrap: break-word;
}

.node-description {
  font-size: 11px;
  color: #718096;
  margin-top: 4px;
  line-height: 1.3;
  max-width: 100%;
  word-wrap: break-word;
  word-break: break-word;
  overflow-wrap: break-word;
  opacity: 0.9;
  /* Responsive font sizing */
  font-size: clamp(9px, 1.5vw, 12px);
  /* Center text */
  text-align: center;
  /* Allow text to adjust to container size */
  overflow: hidden;
  text-overflow: ellipsis;
  /* Add max width to prevent overly wide nodes */
  max-width: 200px;
}

/* Textbox nodes: minimal, transparent by default */


/* Special styling for diamond nodes */
.diamond-node {
  position: relative;
}

.diamond-node .node-label {
  font-size: 11px;
  max-width: 100%;
  font-weight: 700;
  /* Better text handling for diamond shape */
  font-size: clamp(8px, 1.5vw, 12px);
  /* Ensure text doesn't overflow the rotated diamond */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Subgraph/Group Node Styles */
.subgraph-node {
  width: 100%;
  height: 100%;
  position: relative;
}

.subgraph-node.selected {
  outline: 2px solid #2563eb;
  outline-offset: -1px;
  box-shadow: 0 0 0 4px rgba(37, 99, 235, 0.1);
}

/* Enhanced hover state for better resize UX */
.subgraph-node.selected:hover {
  box-shadow: 0 0 0 4px rgba(37, 99, 235, 0.15);
}

/* Slightly reduce drag handle opacity when selected for cleaner resize experience */
.subgraph-node.selected .subgraph-drag-handle {
  opacity: 0.7;
}

.subgraph-node.selected .subgraph-drag-handle:hover {
  opacity: 1;
}

/* Enhanced resize handles styling for subgraphs - only corners visible */
.subgraph-node .react-flow__resize-control {
  background: #2563eb !important;
  border: 2px solid white !important;
  width: 12px !important;
  height: 12px !important;
  border-radius: 3px !important;
  box-shadow: 0 2px 8px rgba(37, 99, 235, 0.3) !important;
  opacity: 1 !important;
}

.subgraph-node .react-flow__resize-control:hover {
  background: #1d4ed8 !important;
  width: 14px !important;
  height: 14px !important;
  box-shadow: 0 4px 12px rgba(29, 78, 216, 0.4) !important;
}

/* Hide side resize handles AND border lines - only show corners */
.subgraph-node .react-flow__resize-control[data-position="top"],
.subgraph-node .react-flow__resize-control[data-position="bottom"],
.subgraph-node .react-flow__resize-control[data-position="left"],
.subgraph-node .react-flow__resize-control[data-position="right"],
.subgraph-node .react-flow__resize-control.top.line,
.subgraph-node .react-flow__resize-control.bottom.line,
.subgraph-node .react-flow__resize-control.left.line,
.subgraph-node .react-flow__resize-control.right.line {
  display: none !important;
}

/* Enhanced corner resize handles with directional cursors */
.subgraph-node .react-flow__resize-control[data-position="top-left"],
.subgraph-node .react-flow__resize-control.top.left.handle {
  cursor: nw-resize !important;
}

.subgraph-node .react-flow__resize-control[data-position="top-right"],
.subgraph-node .react-flow__resize-control.top.right.handle {
  cursor: ne-resize !important;
}

.subgraph-node .react-flow__resize-control[data-position="bottom-left"],
.subgraph-node .react-flow__resize-control.bottom.left.handle {
  cursor: sw-resize !important;
}

.subgraph-node .react-flow__resize-control[data-position="bottom-right"],
.subgraph-node .react-flow__resize-control.bottom.right.handle {
  cursor: se-resize !important;
}

/* Enhanced subgraph connection handles */
.subgraph-connection-handle:hover {
  opacity: 1 !important;
  width: 12px !important;
  height: 12px !important;
  box-shadow: 0 2px 8px rgba(37, 99, 235, 0.3) !important;
}

/* Reduce connection handle opacity when subgraph is selected for cleaner resize experience */
.subgraph-node.selected .subgraph-connection-handle {
  opacity: 0.5 !important;
}

.subgraph-node.selected .subgraph-connection-handle:hover {
  opacity: 1 !important;
}

/* Enhanced resize border lines - HIDDEN since we only want corner handles */
.subgraph-node .react-flow__resize-control-line {
  display: none !important;
}

.subgraph-node.selected:hover .react-flow__resize-control-line {
  display: none !important;
}

/* Editing Toolbar Styles */
.editing-toolbar {
  position: fixed;
  top: 80px;
  left: 20px;
  background: var(--surface);
  border: 2px solid var(--border);
  border-radius: 8px;
  padding: 12px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  z-index: 1000;
  display: flex;
  flex-wrap: wrap;
  gap: 16px;
  align-items: center;
  max-width: calc(100vw - 40px);
  font-size: 12px;
}

.editing-toolbar-section {
  display: flex;
  align-items: center;
  border-right: 1px solid var(--border);
}
.draggable-palette-item {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: 6px;
  padding: 8px;
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: grab;
}

.editing-toolbar-section:last-child {
  border-right: none;
  padding-right: 0;
}

.editing-toolbar-label {
  font-weight: 600;
  color: var(--muted);
  font-size: 11px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.editing-toolbar-btn {
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: 4px;
  padding: 6px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s;
  min-width: 28px;
  min-height: 28px;
}

.editing-toolbar-btn:hover {
  background: var(--primary);
  color: white;
  border-color: var(--primary);
  transform: translateY(-1px);
}

.editing-toolbar-btn:active {
  transform: translateY(0);
}

.editing-toolbar-btn-danger {
  background: color-mix(in srgb, var(--surface) 90%, #ffebee 10%);
  border-color: color-mix(in srgb, var(--surface) 85%, #f44336 15%);
  color: color-mix(in srgb, var(--surface) 30%, #f44336 70%);
}

.editing-toolbar-btn-danger:hover {
  background: #f44336;
  color: white;
}


.subgraph-header {
  position: absolute;
  top: 0; /* Keep it at the very top */
  left: 0; /* Keep it at the very left */
  z-index: 50; /* Ensure header is above nodes and edges */
  display: flex;
  align-items: center;
  gap: 4px; /* Reduce gap for a smaller appearance */
  max-width: calc(100% - 40px); /* Prevent overlap with drag handle */
  overflow: hidden; /* Hide overflow */
  white-space: nowrap; /* Prevent breaking */
  text-overflow: ellipsis; /* Add ellipsis for long titles */
}

.subgraph-title {
  margin: 0;
  font-size: 12px; /* Make the font size smaller */
  font-weight: 700;
  text-align: left;
  background: rgba(255, 255, 255, 0.95);
  padding: 4px 6px; /* Reduce padding for a smaller appearance */
  border-radius: 10px; /* Adjust border radius for a smaller look */
  display: inline-block;
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.15); /* Reduce shadow for a smaller look */
  border: 1px solid rgba(255, 255, 255, 0.3); /* Adjust border for a smaller look */
  backdrop-filter: blur(5px); /* Reduce blur effect */
  color: #2D3748;
}

.subgraph-drag-handle {
  position: absolute;
  top: 0px; /* Move closer to the top */
  right: 0px; /* Move closer to the right */
  width: 24px; /* Make it smaller */
  height: 24px; /* Make it smaller */
  background: rgba(255, 255, 255, 0.95);
  border-radius: 4px; /* Adjust border radius for a smaller look */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: move;
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1); /* Reduce shadow for a smaller look */
  transition: all 0.2s;
  color: #718096;
  z-index: 50; /* Ensure drag handle is clickable above other elements */
}

.subgraph-drag-handle:hover {
  background: #ffffff;
  transform: scale(1.1);
  color: #2D3748;
}


/* React Flow overrides for better styling */
.react-flow__node-group {
  cursor: move;
}

/* Enhanced selection styles only for subgraph nodes */
.react-flow__node-group.selected {
  box-shadow: 0 0 0 2px #1976D2 !important;
}

.custom-node.locked:hover {
  border-style: dashed;
  border-color: #f59e0b;
}

/* Style for the lock icon that appears on hover */
.custom-node.locked:hover::before {
  content: "🔒";
  position: absolute;
  top: -4px;
  right: -4px;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 10px;
  z-index: 10;
  box-shadow: 0 2px 4px rgba(0,0,0,0.2);
}


/* Edge label styling */
.react-flow__edge-text {
  font-size: 12px !important;
  font-weight: 500 !important;
}

/* Base styles for all node handles - hide by default */
.react-flow__handle {
  opacity: 0;
  transition: opacity 0.2s, transform 0.2s;
  transform: scale(0.8);
}

/* Show handles on hover or when selected - applies to all nodes */
.react-flow__node:hover .react-flow__handle,
.react-flow__node.selected .react-flow__handle {
  opacity: 1;
  transform: scale(1);
}

/* Special styling for custom nodes */
.custom-node .react-flow__handle {
  /* Ensure handles are positioned relative to the node and visually centered
    on each side. React Flow usually applies positioning via its own CSS,
    but custom node padding/borders and transforms can shift them. Force
    absolute positioning and explicit offsets here for consistent placement. */
  position: absolute !important;
  background-color: #555;
  border: 2px solid white;
  box-shadow: 0 0 4px rgba(0,0,0,0.3);
  z-index: 12;
  pointer-events: auto;
}

/* Differentiate handle types by color */
.custom-node .react-flow__handle.react-flow__handle-top,
.custom-node .react-flow__handle.react-flow__handle-right {
  background-color: #3498db; /* Blue for target handles */
}

.custom-node .react-flow__handle.react-flow__handle-bottom,
.custom-node .react-flow__handle.react-flow__handle-left {
  background-color: #2ecc71; /* Green for source handles */
}

/* Shape-specific handle styling */
.shape-diamond .react-flow__handle {
  background-color: #f39c12;
}

.shape-circle .react-flow__handle {
  background-color: #9b59b6;
}

/* Handle size variations */
.react-flow__handle-top,
.react-flow__handle-bottom {
  width: 10px !important;
  height: 10px !important;
}

.react-flow__handle-left,
.react-flow__handle-right {
  width: 8px !important;
  height: 8px !important;
}

/* Explicitly center handles on each side of the node. These rules
   override any layout/padding shifts caused by the node's internal
   padding or border. Uses transform to keep handle center aligned. */
.custom-node .react-flow__handle.react-flow__handle-top {
  top: 0 !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
}
.custom-node .react-flow__handle.react-flow__handle-bottom {
  bottom: 0 !important;
  left: 50% !important;
  transform: translate(-50%, 50%) !important;
}
.custom-node .react-flow__handle.react-flow__handle-left {
  left: 0 !important;
  top: 50% !important;
  transform: translate(-50%, -50%) !important;
}
.custom-node .react-flow__handle.react-flow__handle-right {
  right: 0 !important;
  top: 50% !important;
  transform: translate(50%, -50%) !important;
}

/* Diamond nodes: because the node container is rotated to create the diamond
   shape, handles will also rotate and won't sit at the visual midpoints of
   the diamond sides. To correctly position handles for diamond-shaped nodes
   you should avoid rotating the entire .custom-node container. Instead,
   rotate only an inner background or use SVG/clip-path so handles remain
   unrotated. The below is a pragmatic adjustment that may help in some
   situations but is not a full replacement for the structural change. */
.custom-node.shape-diamond .react-flow__handle {
  /* keep them visible and usable; fine-tune if necessary */
  transform: none !important;
}

/* Active state for handles when being connected */
.react-flow__handle.connecting {
  opacity: 1 !important;
  transform: scale(1.2) !important;
  box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.8), 0 0 0 4px rgba(52, 152, 219, 0.5);
}

/* Improve visibility during connection */
.react-flow__node:has(.react-flow__handle.connecting) {
  z-index: 10;
}

/* Subgraph node specific styles - override colors */
.subgraph-node .react-flow__handle {
  background-color: #ff6b6b;
  border: 2px solid white;
  box-shadow: 0 0 6px rgba(0,0,0,0.3);
}

.transition-all {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-shadow:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;
  transform: translateY(-2px);
}

.cursor-pointer {
  cursor: pointer;
}

.min-width-0 {
  min-width: 0;
}

/* Modern right-side Inspector */
/* Inspector removed */

/* Preview/Canvas split panes */
.preview-pane {
  border-right: 1px solid rgba(0,0,0,0.06);
  display: flex;
  flex-direction: column;
  min-width: 180px;
}
.preview-pane-header {
  padding: 6px 8px;
  border-bottom: 1px solid rgba(0,0,0,0.06);
  background: #fff;
}
.preview-pane-body {
  flex: 1;
  overflow: auto;
  padding: 8px;
}
.canvas-pane {
  flex: 1;
  position: relative;
  min-width: 180px;
}
.vertical-resizer {
  width: 6px;
  cursor: col-resize;
  background: linear-gradient(to right, transparent, rgba(0,0,0,0.08), transparent);
}
.vertical-resizer:hover, .vertical-resizer.resizing {
  background: rgba(13,110,253,0.2);
}

/* Toasts */
.toasts-container {
  position: fixed;
  top: 12px;
  right: 12px;
  display: flex;
  flex-direction: column;
  gap: 8px;
  z-index: 2000;
}
.toast-item {
  display: flex;
  align-items: center;
  gap: 8px;
  background: #fff;
  border: 1px solid rgba(0,0,0,0.08);
  border-left: 4px solid #0d6efd;
  border-radius: 8px;
  padding: 8px 10px;
  min-width: 220px;
  box-shadow: 0 8px 24px rgba(16,24,40,0.12);
}
.toast-item .toast-icon { color: #0d6efd; }
.toast-success { border-left-color: #28a745; }
.toast-error { border-left-color: #dc3545; }
.toast-info { border-left-color: #0dcaf0; }
.toast-message { font-size: 13px; color: #0f172a; }

/* Sidebar Animations */
.collapsed-sidebar {
  transform: translateX(-100%);
}

.expanded-sidebar {
  transform: translateX(0);
}

/* Custom Scrollbar */
.overflow-auto::-webkit-scrollbar {
  width: 6px;
}

.overflow-auto::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 3px;
}

.overflow-auto::-webkit-scrollbar-thumb {
  background: #c1c1c1;
  border-radius: 3px;
}

.overflow-auto::-webkit-scrollbar-thumb:hover {
  background: #a8a8a8;
}


/* Loading Spinner */
.spinner-border {
  width: 3rem;
  height: 3rem;
}

/* Streaming indicator */
.streaming-indicator {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 3.2rem;
  height: 3.2rem;
  border-radius: 50%;
  background: linear-gradient(90deg, rgba(13,110,253,0.08), rgba(13,110,253,0.02));
}

/* When streaming, force single pan (grab) cursor and prevent node hover pointer changes */
.streaming-mode {
  cursor: grab !important;
}
.streaming-mode .react-flow__node,
.streaming-mode .react-flow__edge {
  pointer-events: none !important;
}

/* While streaming, force preview and canvas to split 50/50 and hide the vertical resizer */
.streaming-mode .preview-pane {
  width: 50% !important;
}
.streaming-mode .canvas-pane {
  width: 50% !important;
}
.streaming-mode .vertical-resizer {
  display: none !important;
}

/* Bring edges above node containers (useful when subgraph containers overlap edges)
   but keep interactive controls (handles, resizers, headers, panels) above edges. */
.react-flow__edges {
  z-index: 40; /* above typical node content but below UI chrome */
  pointer-events: none; /* keep edges from blocking interactions */
}

.react-flow__edge, .react-flow__edge-path, .react-flow__connection {
  z-index: 40;
}

/* Ensure handles, headers and resize controls remain above edges for interaction */
.react-flow__handle,
.react-flow__resize-control,
.subgraph-header,
.react-flow__panel,
.react-flow__controls,
.editing-toolbar--floating {
  z-index: 60 !important;
  pointer-events: all !important;
}

/* Make sure node visual content doesn't create a higher stacking context than edges */
.react-flow__node .node-content,
.subgraph-node,
.custom-node {
  z-index: 10;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
  .expanded-sidebar {
    position: fixed;
    top: 0;
    left: 0;
    height: 100vh;
    z-index: 1050;
    width: 100vw !important;
  }
  
  .collapsed-sidebar {
    width: 0 !important;
  }
}

.fs-7 {
  font-size: 0.875rem !important;
}

/* Compact Buttons */
.btn-sm {
  padding: 0.25rem 0.5rem;
  font-size: 0.75rem;
  line-height: 1.25;
}

/* Minimal Cards */
.card-body {
  padding: 0.5rem;
}

/* Compact Form Controls */
.form-control-sm {
  padding: 0.25rem 0.5rem;
  font-size: 0.75rem;
  line-height: 1.25;
}

/* Minimal Badges */
.badge {
  font-size: 0.6em;
  padding: 0.25em 0.5em;
}

/* Clean Accordion Buttons */
.btn-link {
  text-decoration: none;
}

.btn-link:hover {
  background-color: rgba(0, 0, 0, 0.03);
}

/* Compact Toolbar */
.position-absolute.top-0 {
  height: 50px;
}

/* Minimal Scrollbar */
.overflow-auto::-webkit-scrollbar {
  width: 4px;
}

.overflow-auto::-webkit-scrollbar-track {
  background: transparent;
}

.overflow-auto::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.2);
  border-radius: 2px;
}

.overflow-auto::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.3);
}

/* Button Groups */
.btn-group .btn {
  border-radius: 0;
}

.btn-group .btn:first-child {
  border-top-left-radius: 0.375rem;
  border-bottom-left-radius: 0.375rem;
}

.btn-group .btn:last-child {
  border-top-right-radius: 0.375rem;
  border-bottom-right-radius: 0.375rem;
}

/* User-friendly resize controls - inspired by subgraph styling */
.custom-node .react-flow__resize-control {
  background: #2563eb !important;
  border: 2px solid white !important;
  width: 10px !important;
  height: 10px !important;
  opacity: 1 !important;
  pointer-events: all !important;
  z-index: 10 !important;
  border-radius: 2px !important;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2) !important;
}

.custom-node .react-flow__resize-control:hover {
  background: #1d4ed8 !important;
  transform: scale(1.2) !important;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3) !important;
}

.custom-node .react-flow__resize-control-line {
  border-color: #2563eb !important;
  border-width: 2px !important;
  opacity: 1 !important;
  border-style: solid !important;
}

.custom-node .react-flow__resize-control-line:hover {
  border-color: #1d4ed8 !important;
  border-width: 3px !important;
}

/* Simple cursor styles for resize directions */
.custom-node .react-flow__resize-control {
  cursor: nw-resize;
}

.custom-node .react-flow__resize-control[data-position="top"] {
  cursor: ns-resize;
}

.custom-node .react-flow__resize-control[data-position="bottom"] {
  cursor: ns-resize;
}

.custom-node .react-flow__resize-control[data-position="left"] {
  cursor: ew-resize;
}

.custom-node .react-flow__resize-control[data-position="right"] {
  cursor: ew-resize;
}

.custom-node .react-flow__resize-control[data-position="top-left"] {
  cursor: nw-resize;
}

.custom-node .react-flow__resize-control[data-position="top-right"] {
  cursor: ne-resize;
}

.custom-node .react-flow__resize-control[data-position="bottom-left"] {
  cursor: sw-resize;
}

.custom-node .react-flow__resize-control[data-position="bottom-right"] {
  cursor: se-resize;
}

/* ReactFlow Dark Mode Styles */
.dark .react-flow {
  background-color: hsl(var(--background));
}

.dark .react-flow__pane {
  background-color: hsl(var(--background));
}

.dark .react-flow__controls {
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
}

.dark .react-flow__controls button {
  background-color: hsl(var(--card));
  color: hsl(var(--foreground));
  border-bottom: 1px solid hsl(var(--border));
}

.dark .react-flow__controls button:hover {
  background-color: hsl(var(--muted));
}

.dark .react-flow__minimap {
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
}

.dark .react-flow__background {
  color: hsl(var(--border));
}

.dark .react-flow__edge-path {
  stroke: hsl(var(--muted-foreground));
}

.dark .react-flow__edge-text {
  fill: hsl(var(--foreground));
}

.dark .react-flow__handle {
  background-color: hsl(var(--primary));
  border: 1px solid hsl(var(--primary-foreground));
}

.dark .react-flow__handle:hover {
  background-color: hsl(var(--primary)/0.8);
}

.dark .react-flow__node {
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  color: hsl(var(--foreground));
}

.dark .react-flow__node-input,
.dark .react-flow__node-output,
.dark .react-flow__node-default {
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  color: hsl(var(--foreground));
}

.dark .react-flow__node.selected {
  box-shadow: 0 0 0 2px hsl(var(--primary));
}

.dark .react-flow__attribution {
  background-color: hsl(var(--card));
  color: hsl(var(--muted-foreground));
  border: 1px solid hsl(var(--border));
}

